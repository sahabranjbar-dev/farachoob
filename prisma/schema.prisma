// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String?
  roles     UserRole[]
  createdAt DateTime  @default(now()) 
}

model Role {
  id           String           @id @default(uuid())
  farsiTitle   String?          @unique
  englishTitle String?          @unique
  description  String?
  status       Boolean?         @default(true)
  permissions  RolePermission[]
  users        UserRole[]
}

model Menu {
  id           String      @id @default(uuid())
  title        String
  href         String
  icon         String? // اسم آیکن (اختیاری)
  permission   Permission  @relation(fields: [permissionId], references: [id])
  permissionId String
  status       Boolean     @default(true)
  createdAt    DateTime    @default(now())
}

model Permission {
  id          String             @id @default(uuid())
  name        String             @unique
  description String?
  roles       RolePermission[]
  menus       Menu[]
}

model RolePermission {
  id           String      @id @default(uuid())
  roleId       String
  permissionId String

  role       Role       @relation(fields: [roleId], references: [id])
  permission Permission @relation(fields: [permissionId], references: [id])

  @@unique([roleId, permissionId])
}

model UserRole {
  id     String  @id @default(uuid())
  userId String
  roleId String

  user User @relation(fields: [userId], references: [id])
  role Role @relation(fields: [roleId], references: [id])

  @@unique([userId, roleId])
}
